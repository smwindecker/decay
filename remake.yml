
packages:
  - decaymod
  - doMC
  - foreach
  - grDevices
  - graphics
  - knitr
  - magrittr
  - rstan
  - stats
  - tools
  - utils
  - xtable

sources:
  - 'R/trait_data.R'
  - 'R/decay_data.R'
  - 'R/create_jobs.R'
  - 'R/decaymod.R'
  - 'R/figures.R'
  - 'R/tables.R'
  - 'R/manuscript_functions.R'

targets:
  all:
    depends:
      - figures
      - tables
      - manuscript.pdf

  figures:
    depends:
      - figs/boxplot.png
      - figs/pairplot.png
      - figs/raw_pca.png
      - figs/weibull_sim.png

  tables:
    depends:
      - figs/pca_loadings.tex
      - figs/traits_table.tex
      - figs/deviance.tex
      - figs/diagnostics.tex
      - figs/model_list.rds

  # --------- data ------------------------

  species:
    command: load_species("data-raw/species.csv")

  combined_traits:
    command: traits_combine(species_data = species,
                            leco_data = "data-raw/leco.csv",
                            trait_data = "data-raw/traits.csv",
                            tga_data_folder = "data-raw/tga/")
    cleanup_level: purge
    check: exists

  mean_traits:
    command: traits_mean_only(combined_traits)

  decay_data:
    command: prepare_decay_data(initial_weight = "data-raw/pre_weight.csv",
                                removal_weight = "data-raw/decomp_weight.csv",
                                trait_data = mean_traits)

  logged_trait_matrix:
    command: traits_log(mean_traits)

  pca_output:
    command: pca_data(logged_trait_matrix)

  # -------- analyse data ---------

  job_list:
    command: create_jobs(models = I(data.frame(model_type = c("w"),
                                               fixed_effects = c(TRUE),
                                               random_effects = c(FALSE))),
                         data = decay_data,
                         cv_cluster = I("species_code"),
                         fixed_effects_list = I(c("N")))

  model_list:
    command: run_models(job_list,
                        decay_data,
                        initial_mass = I("mInit"),
                        removal_mass = I("mRem"),
                        time = I("t"),
                        group = I("species_code"),
                        n_cores = I(20))

  # -------- figures -------------

  figs/boxplot.png:
    plot:
      width: 1200
      height: 950
    command: box_plot(mean_traits)

  figs/raw_pca.png:
    plot:
      width: 1000
      height: 950
    command: pca(pca_output, logged_trait_matrix, species)

  figs/pairplot.png:
    plot:
      width: 1500
      height: 1500
    command: pair_plot(logged_trait_matrix)

  figs/var_alpha.png:
    plot:
      width: 400
      height: 350
    command: simulate_weibull(constant_param = I('beta'),
                   constant_value = 1.3,
                   low = 0.3,
                   high = 1.2)

  figs/var_beta.png:
    plot:
      width: 400
      height: 350
    command: simulate_weibull(constant_param = I('alpha'),
                 constant_value = 1,
                 low = 0.3,
                 high = 2.5)

  # --------- tables ---------
  figs/traits_table.tex:
    command: traits_table(combined_traits, target_name)

  figs/pca_loadings.tex:
    command: pca_loadings(pca_output, target_name)

  figs/decay_data.csv:
    command: write.csv(decay_data, target_name)

  figs/model_list.rds:
    command: saveRDS(model_list, target_name)

  figs/deviance.tex:
    command: deviance_table(model_list, target_name)

  # ------ report ---------
  manuscript.tex:
    depends:
      - combined_traits
      - mean_traits
      - decay_data
      - logged_trait_matrix
      - pca_output
      - job_list
      - model_list
    knitr: TRUE

  manuscript.pdf:
    command: texi2pdf("manuscript.tex", clean = TRUE)
    depends:
      - figures
      - tables
